week:3

DAY1:
problem 1:(lcm gcd)

#include <stdio.h>
int GCD(int A, int B);
int GCD(int A, int B) {
    if(B==0)
        return A;
    else
        return GCD(B, A % B);
}
int main() {
	//code
	long long int t,i,j;
	scanf("%d",&t);
	for(j=0;j<t;j++)
	{
	    long long int lcm,gcd,a,b;
	    scanf("%d %d",&a,&b);
	    gcd=GCD(a,b);
	    lcm=(a*b)/gcd;
	    printf("%d %d\n",lcm,gcd);
	}
	return 0;
}

problem 2:(prime numbers)

#include <stdio.h>

int main() {
	//code
	int t,i,j;
	scanf("%d",&t);
	for(i=0;i<t;i++)
	{
	   int a,k;
	   scanf("%d",&a);
	   for(j=2;j<=a;j++)
	   {
	       int flag=0;
	       for(k=j-1;k>=2;k--)
	       {
	           if(j%k==0)
	           {
	               flag=1;
	               break;
	           }
	       }
	       if(flag==0)
	       {
	           printf("%d ",j);
	       }
	   }
	   printf("\n");
	}
	return 0;
}

problem 3:change

#include<stdio.h>
int power(int a,int b);
int power(int a,int b)
{
	int i;
	if(b==0)
	{
		return 1;
	}
	if(b%2==0)
	{
		return power(a*a,b/2);
	}
	else
	{
		return (a*power(a*a,(b-1)/2));
	}
}
int d, x, y,z;
void extendedEuclid(long long int A,long long  int B) {
    if(B == 0) {
        d = A;
        x = 1;
        y = 0;
    }
    else {
        extendedEuclid(m, c%m);
		long long int temp = z;
		z = y;
		y = temp - (c/m)*y;
    }
}
long long int modInverse( long long int c, long long int M)
{
extendedEuclid(c,M);
return (z%M+M)%M;
}
int main()
{
	long long int a,b,c,m,k,p;
	long long int ans;
	scanf("%lld %lld %lld %lld",&a,&b,&c,&m);
	k=power(a,b);
	p=modInverse(c,m);
	ans=(k%m * p%m)%m;
	printf("%lld",ans);
}
